#!/usr/bin/env python
import sys, os, re, time
import ConfigParser
from subprocess import call


""" Module Details """
__author__      = "Mike Mackintosh"
__copyright__   = "Copyright 2014"
__credits__     = ["Mike Mackintosh"]
__license__     = "GPL"
__version__     = "0.7.8c"
__builddate__   = int(os.stat(__file__).st_mtime)
__maintainer__  = "Mike Mackintosh"
__email__       = "m@rocketho.me"
__status__      = "Production"


"""
Gather Args
"""
if len(sys.argv) is 1:
  print "Usage: autorun <file>"
  exit()

elif len(sys.argv) is 3:
  file = sys.argv[1]
  track_path = sys.argv[2] 

else:
  file = sys.argv[1]
  track_path = '.'

"""
Get Config
"""
config = ConfigParser.SafeConfigParser()
config.read('.autorun.conf')


""" Read Database Config """
command = config.get('global', 'command')

"""
Start loop
"""
try:
  while True:
    currenttime = time.time()
    for root, dirnames, filenames in os.walk(track_path):
      for tracker in filenames:

        filetime = os.stat("%s/%s" % (root, tracker)).st_mtime
        if filetime > currenttime-1.5:
          
          """
          Start processing the file/command
          """
          print "Change found in: %s" % tracker
          print "Preparing to run: %s" % file
          
          # os.system("php -f %s" % file)
          return_code = call("%s %s" % (command, file), shell=True)

          if return_code is 0:
            print "Executed Successfully"

          elif return_code is 1:
            print "Execution Failed"

          else:
            print "Received a response of: %d" % return_code

          print "\nExecution Completed"
          print "Took %s seconds\n%s\n\n" % (time.time() - currenttime, "=" * 40)
          
          break
        
    time.sleep(1)

except KeyboardInterrupt:
  exit()
